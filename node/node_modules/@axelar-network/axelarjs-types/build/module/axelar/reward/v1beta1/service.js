/* eslint-disable */
import _m0 from "protobufjs/minimal";
import { InflationRateRequest, InflationRateResponse, ParamsRequest, ParamsResponse } from "./query";
import { RefundMsgRequest, RefundMsgResponse } from "./tx";
export const protobufPackage = "axelar.reward.v1beta1";
export class MsgServiceClientImpl {
    constructor(rpc, opts) {
        this.service = opts?.service || "axelar.reward.v1beta1.MsgService";
        this.rpc = rpc;
        this.RefundMsg = this.RefundMsg.bind(this);
    }
    RefundMsg(request) {
        const data = RefundMsgRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "RefundMsg", data);
        return promise.then((data) => RefundMsgResponse.decode(new _m0.Reader(data)));
    }
}
export class QueryServiceClientImpl {
    constructor(rpc, opts) {
        this.service = opts?.service || "axelar.reward.v1beta1.QueryService";
        this.rpc = rpc;
        this.InflationRate = this.InflationRate.bind(this);
        this.Params = this.Params.bind(this);
    }
    InflationRate(request) {
        const data = InflationRateRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "InflationRate", data);
        return promise.then((data) => InflationRateResponse.decode(new _m0.Reader(data)));
    }
    Params(request) {
        const data = ParamsRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "Params", data);
        return promise.then((data) => ParamsResponse.decode(new _m0.Reader(data)));
    }
}
