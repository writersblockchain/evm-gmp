"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.QueryServiceClientImpl = exports.MsgServiceClientImpl = exports.protobufPackage = void 0;
/* eslint-disable */
const minimal_1 = __importDefault(require("protobufjs/minimal"));
const query_1 = require("./query");
const tx_1 = require("./tx");
exports.protobufPackage = "axelar.reward.v1beta1";
class MsgServiceClientImpl {
    constructor(rpc, opts) {
        this.service = opts?.service || "axelar.reward.v1beta1.MsgService";
        this.rpc = rpc;
        this.RefundMsg = this.RefundMsg.bind(this);
    }
    RefundMsg(request) {
        const data = tx_1.RefundMsgRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "RefundMsg", data);
        return promise.then((data) => tx_1.RefundMsgResponse.decode(new minimal_1.default.Reader(data)));
    }
}
exports.MsgServiceClientImpl = MsgServiceClientImpl;
class QueryServiceClientImpl {
    constructor(rpc, opts) {
        this.service = opts?.service || "axelar.reward.v1beta1.QueryService";
        this.rpc = rpc;
        this.InflationRate = this.InflationRate.bind(this);
        this.Params = this.Params.bind(this);
    }
    InflationRate(request) {
        const data = query_1.InflationRateRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "InflationRate", data);
        return promise.then((data) => query_1.InflationRateResponse.decode(new minimal_1.default.Reader(data)));
    }
    Params(request) {
        const data = query_1.ParamsRequest.encode(request).finish();
        const promise = this.rpc.request(this.service, "Params", data);
        return promise.then((data) => query_1.ParamsResponse.decode(new minimal_1.default.Reader(data)));
    }
}
exports.QueryServiceClientImpl = QueryServiceClientImpl;
